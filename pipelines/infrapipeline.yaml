name: $(Build.DefinitionName)-$(Date:yyyyMMdd)$(Rev:.r)   #the tasks and steps required to build and package the application.

trigger:     #in case any code chages it will automatically trigger and run the application without further any steps
- main

pool:   #agents that will be used to execute the tasks defined
   vmImage: 'ubuntu-latest'  #image we are using for vm
  
variables:     #attribute which we want to use 
  - group: common  #variable group which we are using for piplines it will take all the requirements form it 

stages:      # it defines which env stages we wanted 
- stage: Dev  # we are using dev stage 
  jobs:    #it defines tasks or jobs
  - job : TerraformPlan  #it define to run the plan task or jib  to know what is createing 
    steps:

    - script: 'terraform -chdir=terraform/ init -input=false'  # executes the Terraform initialization command in directory should not prompt for input during the initialization process.
      displayName: 'Init' #it will run the init task or job
  
    - script: 'terraform -chdir=terraform/ validate'
      displayName: 'Validate'    #it will run the validate task 
  
    - script: 'terraform -chdir=terraform/ plan -var="ARM_CLIENT_ID=$(ARM_CLIENT_ID)" -var="ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)" -var="ARM_TENANT_ID=$(ARM_TENANT_ID)"  -var="ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)"'  #it will take all this ids to run the task
      displayName: 'Plan'    #it will run the  task or job   
      env:             #it will plan the resources to add in azure by using beloew variables. 
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
  
    - script: 'terraform -chdir=terraform/ apply -auto-approve -var="ARM_CLIENT_ID=$(ARM_CLIENT_ID)" -var="ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)" -var="ARM_TENANT_ID=$(ARM_TENANT_ID)"  -var="ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)" -input=false'  #it will approve variables and run the task and create the resources in cloud
      displayName: 'Apply'  #this is the task or job 
      env:        #it will apply task and  the resources to create  in azure by using beloew variables. 
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
