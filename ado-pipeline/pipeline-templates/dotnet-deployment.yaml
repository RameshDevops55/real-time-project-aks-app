steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Download artifact'
    inputs:
      artifactName: 'publish'
      downloadPath: '$(System.ArtifactsDirectory)/publish'

  - task: AzureRmWebAppDeployment@4
    displayName: 'Deploy to Azure Web App'
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: '$(az_sc_name)'
      appType: 'webApp'
      WebAppName: '$(webapp1)'
      packageForLinux: '$(System.ArtifactsDirectory)/publish/**/*.zip'
      enableCustomDeployment: true
      DeploymentType: 'webDeploy'
     
  - task: Kubernetes@1
    displayName: 'Kubernetes Deployment'
    inputs:
      connectionType: 'AzureResourceManagement'
      azureSubscriptionEndpoint: '$(azureSubscription)'
      azureResourceGroup: 'aks_terraform001'
      kubernetesCluster: 'aksterraform001'
      command: 'apply'
      useConfigurationFile: true
      configurationType: 'filePath'
      configuration: '$(System.ArtifactsDirectory)/publish/deployment.yaml' # Path to your Kubernetes deployment file
      secretType: 'none' # If you need to deploy secrets, you would need to configure them separately 
      
            
        
    - task: AzureCLI@2
      displayName: 'Azure CLI - AKS Deployment'
      inputs:
        azureSubscription: 'Your Azure Subscription' # Choose or create a service connection to your Azure subscription
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
        az aks get-credentials --resource-group aks_terraform001 --name aksterraform001 --overwrite-existing
        kubectl apply -f $(Build.ArtifactStagingDirectory)/publish/deployment.yaml    